import random

from For_Andy.english_words_test.funcs.ai_api import check_english_spelling, check_bulgarian_spelling, translate
from For_Andy.english_words_test.funcs.db_manager import DatabaseManager
from For_Andy.english_words_test.funcs.funcs import selector, select_player, get_name, get_game_type, \
    collect_new_english_word, collect_new_bulgarian_word, show_dictionary, record_session

target_word = None
end_game = False
random_word = None
random_choice = None
next_word = False
total_translations = 0
total_errors = 0
wrong_words = []
db = DatabaseManager()
words_dict = db.get_words_dict()

print('–ó–¥—Ä–∞–≤–µ–π –æ—Ç–Ω–æ–≤–æ, –∫–∞–∫–≤–æ —â–µ –ø—Ä–∞–≤–∏–º –¥–Ω–µ—Å? ')
while True:
    selection = selector()
    if selection == '1':
        sex, add = select_player()
        user = get_name()
        type_of_game = get_game_type(user, sex)
        break
    elif selection == '2':
        counter = 0
        while True:
            new_english = collect_new_english_word()
            checked_english_word = check_english_spelling(new_english)
            if checked_english_word != new_english:
                print(f"–î—É–º–∞—Ç–∞, –º–æ–∂–µ –±–∏ –µ –Ω–∞–ø–∏—Å–∞–Ω–∞ –≥—Ä–µ—à–Ω–æ. –ù–µ —Ç—Ä—è–±–≤–∞ –ª–∏ –¥–∞ –µ: {checked_english_word}")
                continue
            while True:
                new_bulgarian = collect_new_bulgarian_word()
                checked_bulgarian_word = check_bulgarian_spelling(new_bulgarian)
                if checked_bulgarian_word == new_bulgarian or counter == 1:
                    final_check = input(f"–°–∏–≥—É—Ä–µ–Ω –ª–∏ —Å–∏, —á–µ –∏—Å–∫–∞—à –¥–∞ –¥–æ–±–∞–≤–∏—à: {new_english}: {new_bulgarian} –≤ —Ä–µ—á–Ω–∏–∫–∞? ")
                    if final_check.lower() in 'yes–¥–∞da—ä–µ—Å1 ':
                        db.add_word(new_english, new_bulgarian)
                        break
                    else:
                        continue
                else:
                    print("–ø—Ä–µ–≤–æ–¥–∞ –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –Ω–µ –µ –∫–æ—Ä–µ–∫—Ç–µ–Ω. –ú–æ–ª—è –ø—Ä–æ–≤–µ—Ä–∏.")
                    print(f"–º–æ–∂–µ –±–∏ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ: {translate(checked_english_word)}")
                    counter += 1
                    continue
            break
    elif selection == '3':
        show_dictionary(words_dict)
    elif selection == '4':
        print('Bye bye...!')
        exit()
    print("\n–ê —Å–µ–≥–∞ –∫–∞–∫–≤–æ —â–µ –ø—Ä–∞–≤–∏–º? ")

start = input('–ù–∞—Ç–∏—Å–Ω–∏ "Enter" –∑–∞ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—à –∏–≥—Ä–∞—Ç–∞.')

#  ///////////////////////////////////////////////////////////////////////////////////////  # user selection

while not end_game:
    random_en_word = random.choice(list(words_dict.keys()))  # select random english word from dictionary
    random_bg_word = random.choice(list(words_dict.values()))  # select random bulgarian word from dictionary

    if type_of_game == '1':
        random_word = random_en_word
        translation = '–ë—ä–ª–≥–∞—Ä—Å–∫–∏'
    elif type_of_game == '2':
        random_word = random_bg_word
        translation = '–ê–Ω–≥–ª–∏–π—Å–∫–∏'
    else:

        random_choices = [1, 2]
        random_choice = random.choice(random_choices)
        if random_choice == 1:
            random_word = random_en_word
            translation = '–ë—ä–ª–≥–∞—Ä—Å–∫–∏'
        else:
            random_word = random_bg_word
            translation = '–ê–Ω–≥–ª–∏–π—Å–∫–∏'

    print('\n-------------------------------------------------------\n')
    print(f'–∫–∞–∫ —Å–µ –ø—Ä–µ–≤–µ–∂–¥–∞ "{random_word}" –Ω–∞ {translation}?')

    if type_of_game == '2' or (type_of_game == '3' and random_choice == 2):
        for key, item in words_dict.items():
            if item == random_word:
                target_word = key

    elif type_of_game == '1' or (type_of_game == '3' and random_choice == 1):
        target_word = words_dict[random_en_word]
    tries = 0
    while True:

        if tries < 2:
            user_input = input('–û—á–∞–∫–≤–∞–º –æ—Ç–≥–æ–≤–æ—Ä–∞ —Ç–∏: ')
            if user_input == 'stop' or user_input == '—Å—Ç–æ–ø':

                print('\n#############################################################')
                print(f'{user.capitalize()} —Ç–∏ –ø—Ä–µ–≤–µ–¥–µ {total_translations} –¥—É–º–∏.')
                print(f'–ò–º–∞—à–µ –∏ {total_errors} –≥—Ä–µ—à–∫–∏.')
                print(f'–î—É–º–∏—Ç–µ, —Å –∫–æ–∏—Ç–æ —Å–µ –∑–∞—Ç—Ä—É–¥–Ω–∏ –±—è—Ö–∞: {wrong_words}')

                end_game = True
                break
            else:
                guess = user_input

            if guess == target_word:
                print('–ü—Ä–∞–≤–∏–ª–Ω–æ! üòäüëç')
                total_translations += 1
                next_word = True
                break
            else:
                tries += 1
                print()
                print('–ì—Ä–µ—à–∫–∞!')
                print('–ü–æ–º–∏—Å–ª–∏ –∏ –æ–ø–∏—Ç–∞–π –æ—â–µ –≤–µ–¥–Ω—ä–∂.')
        else:
            print('\n******')
            print(f'–ù–µ —É—Å–ø—è –¥–∞ —Å–µ —Å–µ—Ç–∏—à {user.capitalize()} üòµ')
            print(f'–ü—Ä–µ–≤–æ–¥—ä—Ç –Ω–∞ "{random_word.upper()}" e "{target_word.upper()}"')
            total_errors += 1
            wrong_words.append(random_word)

            break

print('\n–£—Å–ø–µ—Ö —Å —É—á–µ–Ω–µ—Ç–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏—è –µ–∑–∏–∫!\n')
program_stop = input('–ù–∞—Ç–∏—Å–Ω–∏ "Enter –∑–∞ –¥–∞ –∑–∞—Ç–≤–æ—Ä–∏—à –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞"')
record_session(user, total_translations, total_errors, wrong_words)
db.add_session(user, total_translations, total_errors, wrong_words)